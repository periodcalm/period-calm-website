"use client"

import { useState, useEffect, useRef, useCallback } from 'react'
import { Card, CardContent } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { X, Send, Heart, Star, Sparkles, MessageCircle, Bot, User, Loader2, ArrowLeft } from 'lucide-react'
import { PERIOD_CALM_KNOWLEDGE_BASE } from '@/lib/ai-knowledge-base'

interface ChatMessage {
  id: string
  type: 'ai' | 'user'
  content: string
  timestamp: Date
}

const QUICK_QUESTIONS = [
  "What is Period Calm?",
  "How does it work?",
  "What are the ingredients?",
  "How quickly does it work?",
  "Are there any side effects?",
  "How much does it cost?",
  "Where can I buy it?",
  "Is it safe to use?"
]

export default function ProductQAForm({ onCloseAction, onBackToFeedback }: { 
  onCloseAction: () => void
  onBackToFeedback: () => void 
}) {
  const [messages, setMessages] = useState<ChatMessage[]>([])
  const [inputValue, setInputValue] = useState('')
  const [isTyping, setIsTyping] = useState(false)

  const messagesEndRef = useRef<HTMLDivElement>(null)

  const scrollToBottom = useCallback(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })
  }, [])

  useEffect(() => {
    scrollToBottom()
  }, [messages, scrollToBottom])

  // Initialize with welcome message
  useEffect(() => {
    if (messages.length === 0) {
      const welcomeMessage: ChatMessage = {
        id: 'welcome',
        type: 'ai',
        content: "Hey beautiful! ðŸ‘‹ I'm here to answer any questions about Period Calm! ðŸ’•\n\nWhat would you like to know about our natural relief powder?",
        timestamp: new Date()
      }
      setMessages([welcomeMessage])
    }
  }, [messages.length])

  const addMessage = useCallback((message: Omit<ChatMessage, 'id' | 'timestamp'>) => {
    const newMessage: ChatMessage = {
      ...message,
      id: `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      timestamp: new Date()
    }
    setMessages(prev => [...prev, newMessage])
  }, [])

  const getAIResponse = useCallback(async (userInput: string) => {
    const lowerInput = userInput.toLowerCase()
    
    // Simple keyword-based responses
    if (lowerInput.includes('what is') || lowerInput.includes('period calm')) {
      return "Period Calm is our amazing natural drink powder that helps with menstrual discomfort! ðŸ’•\n\nIt's made with scientifically formulated ingredients and works within 0-20 minutes to provide relief from cramps and discomfort.\n\nKey benefits:\nâ€¢ Natural relief from cramps and discomfort\nâ€¢ Fast-acting (0-20 minutes)\nâ€¢ 500+ trial participants\nâ€¢ 4.9/5 star rating\n\nWould you like to know more about our ingredients or how it works?"
    }
    
    if (lowerInput.includes('how does it work') || lowerInput.includes('work')) {
      return "Great question! ðŸŒ¸ Period Calm works by combining natural ingredients that target the root causes of menstrual discomfort:\n\nâ€¢ **Anti-inflammatory compounds** reduce swelling and pain\nâ€¢ **Muscle relaxants** help ease cramps\nâ€¢ **Hormone-balancing herbs** support your natural cycle\nâ€¢ **Fast-absorbing formula** gets to work in 0-20 minutes\n\nOur unique blend is designed to work with your body, not against it! ðŸ’•"
    }
    
    if (lowerInput.includes('ingredient')) {
      return "Period Calm contains carefully selected natural ingredients! ðŸŒ¿\n\n**Key Ingredients:**\nâ€¢ Chamomile - Natural anti-inflammatory\nâ€¢ Ginger - Pain relief and nausea support\nâ€¢ Magnesium - Muscle relaxation\nâ€¢ Vitamin B6 - Hormone balance\nâ€¢ Turmeric - Anti-inflammatory properties\nâ€¢ Peppermint - Digestive comfort\n\nAll ingredients are:\nâœ… Natural and safe\nâœ… Scientifically backed\nâœ… Fast-acting\nâœ… No artificial additives\n\nWould you like to know about any specific ingredient?"
    }
    
    if (lowerInput.includes('quick') || lowerInput.includes('fast') || lowerInput.includes('time')) {
      return "Period Calm is super fast-acting! âš¡\n\n**Timeline:**\nâ€¢ **0-10 minutes**: Initial relief begins\nâ€¢ **10-20 minutes**: Full effect kicks in\nâ€¢ **Lasts 4-6 hours**: Sustained comfort\n\nMost customers feel relief within 10-15 minutes! That's why we're so proud of our formula. ðŸ’ª\n\nNo waiting around - just quick, natural relief when you need it most! ðŸ’•"
    }
    
    if (lowerInput.includes('side effect') || lowerInput.includes('safe')) {
      return "Period Calm is very safe! ðŸŒ±\n\n**Safety Profile:**\nâœ… Made with natural ingredients\nâœ… No artificial additives\nâœ… No known serious side effects\nâœ… Suitable for most women\n\n**Rare mild effects** (if any):\nâ€¢ Slight stomach upset (very rare)\nâ€¢ Mild drowsiness (due to natural relaxation)\n\n**Always consult your doctor** if you have:\nâ€¢ Allergies to any ingredients\nâ€¢ Medical conditions\nâ€¢ Taking other medications\n\nYour safety is our top priority! ðŸ’•"
    }
    
    if (lowerInput.includes('cost') || lowerInput.includes('price') || lowerInput.includes('money')) {
      return "Period Calm is priced for accessibility! ðŸ’°\n\n**Current Pricing:**\nâ€¢ **Regular Price**: â‚¹1,599\nâ€¢ **Special Offer**: â‚¹1,299 (Save â‚¹300!)\nâ€¢ **Free Shipping** on orders above â‚¹999\n\n**Value Breakdown:**\nâ€¢ 30 servings per pack\nâ€¢ â‚¹43 per serving (with discount)\nâ€¢ Less than a coffee! â˜•\n\n**Special Offers:**\nâ€¢ 10% off for first-time buyers\nâ€¢ 15% off for subscribers\nâ€¢ Free samples with orders\n\nWe believe natural relief should be accessible to everyone! ðŸ’•"
    }
    
    if (lowerInput.includes('buy') || lowerInput.includes('where') || lowerInput.includes('purchase')) {
      return "You can buy Period Calm in several ways! ðŸ›’\n\n**Online (Recommended):**\nâ€¢ Our official website\nâ€¢ Free shipping on orders above â‚¹999\nâ€¢ Secure payment options\nâ€¢ 30-day money-back guarantee\n\n**Coming Soon:**\nâ€¢ Amazon India\nâ€¢ Flipkart\nâ€¢ Local pharmacies\n\n**Benefits of buying direct:**\nâœ… Best prices and offers\nâœ… Authentic product guarantee\nâœ… Direct customer support\nâœ… Loyalty rewards\n\nWould you like me to help you place an order? ðŸ’•"
    }
    
    if (lowerInput.includes('thank')) {
      return "You're so welcome! ðŸ’• I'm here anytime you need help or want to share your experience with Period Calm!\n\nRemember, your feedback helps us improve and helps other women too! ðŸŒ¸"
    }
    
    if (lowerInput.includes('bye') || lowerInput.includes('goodbye')) {
      return "Take care beautiful! ðŸ’• Thanks for chatting with me! Come back anytime you have questions about Period Calm!\n\nDon't forget to share your experience when you try it! ðŸŒŸ"
    }
    
    // Default response
    return "That's a great question! ðŸ’• While I'd love to give you a detailed answer, I'm designed to help with common questions about Period Calm.\n\nCould you try asking about:\nâ€¢ What Period Calm is\nâ€¢ How it works\nâ€¢ Ingredients\nâ€¢ Pricing\nâ€¢ Where to buy\nâ€¢ Safety and side effects\n\nOr if you'd like to share your experience with us, I can switch you to our feedback mode! ðŸŒ¸"
  }, [])

  const handleSubmit = useCallback(async () => {
    if (!inputValue.trim() || isTyping) return

    const userInput = inputValue.trim()
    setInputValue('')
    
    // Add user message
    addMessage({
      type: 'user',
      content: userInput
    })

    setIsTyping(true)

    try {
      // Simulate typing delay
      await new Promise(resolve => setTimeout(resolve, 1000))
      
      // Get AI response
      const aiResponse = await getAIResponse(userInput)
      
      setIsTyping(false)

      // Add AI response
      addMessage({
        type: 'ai',
        content: aiResponse
      })

    } catch (error) {
      setIsTyping(false)
      addMessage({
        type: 'ai',
        content: "I'm sorry, I'm having trouble right now. Please try again in a moment."
      })
    }
  }, [inputValue, isTyping, addMessage, getAIResponse])

  const handleQuickQuestion = (question: string) => {
    setInputValue(question)
  }

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault()
      handleSubmit()
    }
  }

  const renderMessage = (message: ChatMessage) => {
    const isAI = message.type === 'ai'
    
    return (
      <div
        key={message.id}
        className={`flex ${isAI ? 'justify-start' : 'justify-end'} mb-4`}
      >
        <div className={`flex items-start space-x-3 max-w-[80%] ${isAI ? 'flex-row' : 'flex-row-reverse'}`}>
          {isAI && (
            <div className="w-8 h-8 bg-gradient-to-r from-rose-400 to-pink-400 rounded-full flex items-center justify-center flex-shrink-0">
              <Bot className="w-4 h-4 text-white" />
            </div>
          )}
          
          <div className={`px-4 py-3 rounded-2xl ${
            isAI 
              ? 'bg-gray-100 text-gray-900' 
              : 'bg-gradient-to-r from-rose-500 to-pink-500 text-white'
          }`}>
            <div className="whitespace-pre-wrap">{message.content}</div>
          </div>

          {!isAI && (
            <div className="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center flex-shrink-0">
              <User className="w-4 h-4 text-white" />
            </div>
          )}
        </div>
      </div>
    )
  }

  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 p-4">
      <Card className="w-full max-w-2xl h-[90vh] bg-white shadow-2xl overflow-hidden">
        <CardContent className="p-0 h-full flex flex-col">
          {/* Header */}
          <div className="flex items-center justify-between p-4 border-b border-gray-200 bg-gradient-to-r from-rose-50 to-pink-50 flex-shrink-0">
            <div className="flex items-center space-x-3">
              <div className="w-8 h-8 bg-gradient-to-r from-rose-400 to-pink-400 rounded-full flex items-center justify-center text-white text-sm font-bold">
                PC
              </div>
              <div>
                <h2 className="text-lg font-bold text-gray-900">Ask Questions</h2>
                <p className="text-sm text-gray-600">Learn about Period Calm! ðŸ’•</p>
              </div>
            </div>
            <div className="flex items-center space-x-2">
              <Button
                onClick={onBackToFeedback}
                variant="outline"
                size="sm"
                className="flex items-center"
              >
                <ArrowLeft className="w-4 h-4 mr-1" />
                Feedback
              </Button>
              <button
                onClick={onCloseAction}
                className="text-gray-400 hover:text-gray-600 transition-colors"
              >
                <X className="w-5 h-5" />
              </button>
            </div>
          </div>

          {/* Chat Messages */}
          <div className="flex-1 overflow-y-auto p-4 min-h-0">
            <div className="space-y-4">
              {messages.map(renderMessage)}
              
              {isTyping && (
                <div className="flex justify-start mb-4">
                  <div className="flex items-start space-x-3 max-w-[80%]">
                    <div className="w-8 h-8 bg-gradient-to-r from-rose-400 to-pink-400 rounded-full flex items-center justify-center flex-shrink-0">
                      <Bot className="w-4 h-4 text-white" />
                    </div>
                    <div className="px-4 py-3 rounded-2xl bg-gray-100">
                      <div className="flex items-center space-x-2">
                        <Loader2 className="w-4 h-4 animate-spin" />
                        <span className="text-gray-600">AI is typing...</span>
                      </div>
                    </div>
                  </div>
                </div>
              )}
            </div>
            <div ref={messagesEndRef} />
          </div>

          {/* Quick Questions */}
          {messages.length === 1 && (
            <div className="p-4 border-t border-gray-200 bg-gray-50">
              <p className="text-sm text-gray-600 mb-3">Quick questions:</p>
              <div className="grid grid-cols-2 gap-2">
                {QUICK_QUESTIONS.map((question) => (
                  <Button
                    key={question}
                    onClick={() => handleQuickQuestion(question)}
                    variant="outline"
                    size="sm"
                    className="text-xs h-auto py-2 px-3 text-left"
                  >
                    {question}
                  </Button>
                ))}
              </div>
            </div>
          )}

          {/* Input Area */}
          <div className="p-4 border-t border-gray-200 bg-gray-50 flex-shrink-0">
            <div className="flex space-x-2">
              <Input
                value={inputValue}
                onChange={(e) => setInputValue(e.target.value)}
                onKeyPress={handleKeyPress}
                placeholder="Ask about Period Calm..."
                className="flex-1"
                disabled={isTyping}
              />
              <Button
                onClick={handleSubmit}
                disabled={!inputValue.trim() || isTyping}
                className="bg-gradient-to-r from-rose-500 to-pink-500 hover:from-rose-600 hover:to-pink-600"
              >
                <Send className="w-4 h-4" />
              </Button>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  )
} 